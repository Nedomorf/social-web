{"version":3,"sources":["Components/Users/Users.module.css","Components/NavBar/NavBar.module.css","Components/Profile/Post/Post.module.css","images/preloader.svg","Components/Profile/AddPost.module.css","Components/Login/Login.module.css","Components/Messages/Messages.jsx","Components/Profile/Post/Post.jsx","Components/Common/Preloader.jsx","Components/Profile/ProfileStatus.jsx","utils/validators/validators.js","Components/Common/FormsFields/FormsFields.js","Components/Profile/AddPostForm.jsx","Components/Profile/ProfileAvatar.jsx","Components/Common/Popup.jsx","Components/Profile/ProfileAvatarDminantColor.js","Components/Profile/Profile.jsx","api/api.js","Redux/profile-reducer.js","hoc/withAuthRedirect.js","Components/Profile/ProfileContainer.jsx","Redux/users-reducer.js","Components/Users/Users.jsx","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/NavBar/NavBar.jsx","Redux/auth-reducer.js","Components/NavBar/NavBarContainer.jsx","Components/Friends/Friends.jsx","Redux/friends-reducer.js","Components/Friends/FriendsContainer.jsx","Components/Login/Login.jsx","Redux/app-reducer.js","Components/Common/Moose.jsx","App.js","serviceWorker.js","Redux/store.jsx","index.js","Components/Common/FormsFields/FormsFields.module.css","Components/Messages/Messages.module.css","Components/Profile/Profile.module.css","Components/Common/Popup.module.css","images/git-profile.jpg"],"names":["module","exports","Messages","Post","props","className","style","post","Preloader","src","preloader","alt","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateUserStatus","type","value","onChange","e","currentTarget","autoFocus","onClick","required","maxLengthCreator","maxLength","length","Textarea","input","meta","hasError","touched","error","formField","Input","maxLength10","ReduxPostFrom","reduxForm","form","onSubmit","handleSubmit","addPost","Field","placeholder","name","component","validate","AddPostForm","values","dispatch","newPostText","reset","ProfileAvatar","avatarStyle","profilePhoto","Object","assign","borderColor","color","borderRadius","borderStyle","Popup","closeModal","setVisible","popup","visible","open","popupBody","popupInner","background","RGB","r","g","b","width","height","margin","close","ProfileAvatarDominantColor","setRGB","profile","photos","large","getAverageColor","then","rgb","IMAGE","Profile","console","log","marginTop","scale","postItem","posts","map","key","postId","profileArea","isFetching","marginBottom","display","alignItems","justifyContent","transform","id","position","filter","avatar","fullName","description","postsArea","reverse","instance","axios","baseURL","withCredentials","headers","usersAPI","page","count","get","res","data","delete","userProfileAPI","userId","put","authAPI","formData","initialState","toggleIsFetching","profileReducer","state","action","newPost","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileContainer","match","params","myId","getProfile","mapDispatchToProps","resultCode","compose","withRouter","users","friends","totalCount","shortPages","toLeftPage","toRightPage","followingInProcess","toggleFollowingProcess","usersReducer","user","followed","switchLeftPage","switchRightPage","Users","onPageChanged","pagesCount","setPage","requestUsers","changePage","num","includes","i","setShortPages","Math","ceil","pages","push","splice","Page","cursor","fontSize","currentPage","usersArea","navs","User","userAvatar","small","userAvatarImg","userData","userName","userDescription","followingButton","some","disabled","unfollow","follow","getUsers","createSelector","getCount","getTotalCount","getPage","getShortPages","getIsFetching","getFollowingInProcess","items","followUser","unfollowUser","NavBar","minLength","Logo","gridTemplateColumns","navItem","userStateWrapper","logout","userState","userDataImage","login","email","setUserData","payload","authMe","authReducer","NavBarContainer","Friends","friend","friendsReducer","FriendsContainer","unfollowFriend","setFriends","setTotalCount","maxLength30","minLength8","LoginReduxForm","Form","errorStyle","commonError","controls","fontWeigh","rememberMe","btn","errorMessage","messages","stopSubmit","_error","Login","loginArea","initialized","appReducer","Moose","App","initializeApp","path","render","UsersContainer","promise","Promise","all","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.18f23a03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__1U0yd\",\"usersArea\":\"Users_usersArea__Nugy0\",\"User\":\"Users_User__3Tloc\",\"userData\":\"Users_userData__1RDzu\",\"userAvatarImg\":\"Users_userAvatarImg__1dRSf\",\"followingButton\":\"Users_followingButton__Pmtvt\",\"userName\":\"Users_userName__2hmsM\",\"pages\":\"Users_pages__2YOIn\",\"currentPage\":\"Users_currentPage__2Svw5\",\"page\":\"Users_page__1t6E2\",\"navs\":\"Users_navs__aVHZd\",\"preloader\":\"Users_preloader__NmOsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__L3TMF\",\"navs\":\"NavBar_navs__oinLb\",\"navItem\":\"NavBar_navItem__dV4mT\",\"Logo\":\"NavBar_Logo__3oHk4\",\"userStateWrapper\":\"NavBar_userStateWrapper__23ES8\",\"logout\":\"NavBar_logout__19dEL\",\"login\":\"NavBar_login__1eLI-\",\"userState\":\"NavBar_userState__1qH3A\",\"pushLogin\":\"NavBar_pushLogin__1cic6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__1mnBo\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.f066f360.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"AddPost_addPost__45hFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2yd4K\",\"loginArea\":\"Login_loginArea__2tLLM\",\"btn\":\"Login_btn__3YNBA\",\"Field\":\"Login_Field__fpsIq\",\"Form\":\"Login_Form__1A8lK\",\"controls\":\"Login_controls__2PIkA\",\"rememberMe\":\"Login_rememberMe__8QirL\"};","import React from 'react';\r\nimport style from './Messages.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.Message}>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque dolores doloribus eaque expedita hic\r\n            laudantium magnam nihil officia perferendis possimus, quam quasi quia quisquam quod quos ratione sapiente\r\n            sit totam.\r\n        </div>\r\n    );\r\n}\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <NavLink to='/' className={style.userName}>\r\n            <h3>User Name</h3>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nfunction Messages() {\r\n    return (\r\n        <div className={style.Messages}>\r\n            <div className={style.messagesArea}>\r\n                <div className={style.Users}>\r\n                    <User/>\r\n                    <User/>\r\n                    <User/>\r\n                </div>\r\n                <div className={style.userMessages}>\r\n                    <Message/>\r\n                    <Message/>\r\n                    <Message/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.Post}>\r\n            {props.post}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import preloader from \"../../images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nfunction Preloader(props) {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\" style={props.style}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps.status !== this.props.status) {\r\n    //         this.setState({\r\n    //             status: this.props.status\r\n    //         })\r\n    //     }\r\n    // }\r\n    //\r\n    // state = {\r\n    //     editMode: false,\r\n    //     status: this.props.status\r\n    // }\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n\r\n    const enableEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const disableEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !editMode\r\n                    ? <div onClick={enableEditMode}>\r\n                        <h3>\r\n                            {status}\r\n                        </h3>\r\n                    </div>\r\n\r\n                    : <div onBlur={disableEditMode}>\r\n                        <input type=\"text\" value={status} onChange={onStatusChange} autoFocus={true}/>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","export const required = value => {\r\n    if (!value) return \"The field is required.\";\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols.`;\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => value => {\r\n    if (value && value.length < minLength) return `Min length is ${minLength} symbols.`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport style from './FormsFields.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${style.formField} ${hasError ? style.error : \"\"}`}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <div>{meta.error}</div> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${style.formField} ${hasError ? style.error : \"\"}`}>\r\n            { hasError && <div>{meta.error}</div> }\r\n            <input {...input} {...props} />\r\n        </div>\r\n    )\r\n}","import style from \"./AddPost.module.css\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../Common/FormsFields/FormsFields\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.addPost}>\r\n            <Field\r\n                placeholder={\"New post...\"}\r\n                name=\"newPostText\"\r\n                component={Textarea}\r\n                validate={[required, maxLength10]}\r\n            />\r\n            {/*<textarea onChange={props.changePostText} value={props.newPostText}/>*/}\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet ReduxPostFrom = reduxForm({\r\n    form: 'post',\r\n})(PostForm)\r\n\r\nconst AddPostForm = (props) => {\r\n    let onSubmit = (values, dispatch) => {\r\n        props.addPost(values.newPostText);\r\n        dispatch(reset('post'));\r\n    }\r\n    return (\r\n        <ReduxPostFrom onSubmit={onSubmit}/>\r\n    )\r\n}\r\n\r\nexport default AddPostForm;","import React from \"react\";\r\n\r\nconst ProfileAvatar = (props) => {\r\n    let avatarStyle = props.avatarStyle;\r\n    return (\r\n        <div>\r\n            {\r\n                props.profilePhoto === null\r\n                    ?\r\n                    <img\r\n                        src=\"http://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png\"\r\n                        alt=\"profile-ava\"\r\n                        // style={{borderColor: props.color}}\r\n                        // style={props.avatarStyle}\r\n                        style={avatarStyle && Object.assign(avatarStyle, {borderColor: props.color})}\r\n                    />\r\n                    : <img src={props.profilePhoto} alt=\"profile-ava\"\r\n                           style={avatarStyle && Object.assign(avatarStyle, {\r\n                               borderRadius: `100%`,\r\n                               borderColor: props.color,\r\n                               borderStyle: `solid`\r\n                           })}\r\n                    />\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileAvatar;","import React from \"react\";\r\nimport style from './Popup.module.css'\r\nimport ProfileAvatar from \"../Profile/ProfileAvatar\";\r\n\r\nconst Popup = (props) => {\r\n\r\n    let modalAvatarStyle = {width: `500px`, height: `500px`, margin: `30px`};\r\n\r\n    const closeModal = () => {\r\n        props.setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div className={`${style.popup} ${props.visible && style.open}`}>\r\n            <div className={style.popupBody} onClick={closeModal}/>\r\n            <div className={style.popupInner} style={{ background: `rgb(` + props.RGB.r + `, ` + props.RGB.g + `, ` + props.RGB.b + `)` }}>\r\n                <ProfileAvatar\r\n                    profilePhoto={props.profilePhoto}\r\n                    avatarStyle={modalAvatarStyle}\r\n                />\r\n                <div onClick={closeModal} className={style.close}>\r\n                    <img src=\"https://img.icons8.com/color/48/000000/close-window.png\" alt='close-modal'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;","import getAverageColor from \"get-average-color\";\r\nimport IMAGE from \"../../images/git-profile.jpg\";\r\n\r\nconst ProfileAvatarDominantColor = (setRGB, profile) => {\r\n\r\n    if (profile) {\r\n        profile.photos.large\r\n            ?\r\n            getAverageColor(profile.photos.large).then(rgb => {\r\n                setRGB(rgb);\r\n            })\r\n            :\r\n            getAverageColor(IMAGE).then(rgb => {\r\n                setRGB(rgb);\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileAvatarDominantColor;","import React, {useEffect, useMemo, useState} from 'react';\r\nimport style from './Profile.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport Preloader from \"../Common/Preloader\";\r\n\r\nimport IMAGE from '../../images/git-profile.jpg'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport AddPostForm from \"./AddPostForm\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport Popup from \"../Common/Popup\";\r\n\r\nimport getAverageColor from 'get-average-color';\r\nimport ProfileAvatarDominantColor from \"./ProfileAvatarDminantColor\";\r\n\r\nfunction Profile(props) {\r\n\r\n    let [visible, setVisible] = useState(false);\r\n    let [RGB, setRGB] = useState({r: 0, g: 0, b: 0});\r\n\r\n    useEffect(() => {\r\n        let profile = props.profile;\r\n        if (profile) {\r\n            ProfileAvatarDominantColor(setRGB, profile)\r\n        }\r\n    }, [props.profile])\r\n\r\n    console.log('123')\r\n\r\n    const closeModal = () => {\r\n        setVisible(false);\r\n    }\r\n\r\n    const openModal = () => {\r\n        setVisible(true);\r\n    }\r\n\r\n    if (!props.profile) {\r\n        let style = {marginTop: `calc(50vh - 10vh)`, scale: '2'};\r\n        return <Preloader style={style}/>\r\n    }\r\n\r\n    let postItem = props.posts.map(post => <Post key={post.postId} post={post.post}/>);\r\n\r\n    let avatarStyle = {width: `200px`, height: `200px`, margin: `30px`};\r\n    let modalAvatarStyle = {width: `500px`, height: `500px`, margin: `30px`};\r\n\r\n    return (\r\n\r\n        <div className={style.Profile}>\r\n            {/*<ProfileAvatarDominantColor profile={props.profile} setRGB={setRGB}/>*/}\r\n            <div className={style.profileArea}>\r\n\r\n                {/*<div className={style.avatar}>*/}\r\n\r\n                {/*    {*/}\r\n                {/*        props.profile.photos.large === null*/}\r\n                {/*            ? <img src=\"https://zurlz.xyz/img/userb.png\" alt=\"profile-ava\" className={style.avatarImg}/>*/}\r\n                {/*            : <img src={props.profile.photos.large} alt=\"profile-ava\" className={style.avatarImg}/>*/}\r\n                {/*        // ? IMG = `https://zurlz.xyz/img/userb.png`*/}\r\n                {/*        // : IMG = props.profile.photos.large*/}\r\n                {/*    }*/}\r\n\r\n                {/*    <div><h1>{props.profile.fullName}</h1></div>*/}\r\n\r\n                {/*</div>*/}\r\n\r\n                {\r\n                    props.isFetching\r\n                        ?\r\n                        <div style={{\r\n                            marginBottom: `33vh`,\r\n                            height: `38vh`,\r\n                            display: `flex`,\r\n                            alignItems: `center`,\r\n                            justifyContent: `center`\r\n                        }}>\r\n                            <Preloader style={{transform: `scale(2)`}}/>\r\n                        </div>\r\n\r\n                        :\r\n\r\n                        <div>\r\n                            <div id='avatarArea' style={{\r\n                                height: `35vh`,\r\n                                position: `relative`,\r\n                                filter: `blur(10px)`,\r\n                                background: `rgb(` + RGB.r + `, ` + RGB.g + `, ` + RGB.b + `)`\r\n                            }}>\r\n                            </div>\r\n                            <div className={style.avatar}>\r\n                                <div onClick={openModal}>\r\n                                    <ProfileAvatar\r\n                                        profilePhoto={props.profile.photos.large}\r\n                                        avatarStyle={avatarStyle}/>\r\n                                </div>\r\n                                <div><h1>{props.profile.fullName}</h1></div>\r\n                            </div>\r\n                            <div className={style.description}>\r\n                                {/*<h3>{props.profile.aboutMe}</h3>*/}\r\n                                <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                            </div>\r\n\r\n                            {/*<Modal visible={visible} width=\"1000px\" height=\"600px\" effect=\"fadeInDown\"*/}\r\n                            {/*       onClickAway={closeModal}>*/}\r\n                            {/*    <div>*/}\r\n                            {/*        <ProfileAvatar*/}\r\n                            {/*            profilePhoto={props.profile.photos.large}*/}\r\n                            {/*            color={color}*/}\r\n                            {/*            avatarStyle={modalAvatarStyle}*/}\r\n                            {/*        />*/}\r\n                            {/*    </div>*/}\r\n                            {/*</Modal>*/}\r\n\r\n                            <Popup\r\n                                profilePhoto={props.profile.photos.large}\r\n                                avatarStyle={modalAvatarStyle}\r\n                                visible={visible}\r\n                                setVisible={setVisible}\r\n                                RGB={RGB}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n                }\r\n\r\n                <div className={style.posts} style={{marginTop: `-35vh`}}>\r\n                    <AddPostForm {...props}/>\r\n                    {/*<div className={style.addPost}>*/}\r\n                    {/*    <textarea onChange={props.changePostText} value={props.newPostText}/>*/}\r\n                    {/*    <button onClick={props.addPost}>Отправить</button>*/}\r\n                    {/*</div>*/}\r\n                    <div className={style.postsArea}>\r\n                        {postItem.reverse()}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Profile;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"75a2366b-2f8c-4059-8cc9-298369a0c793\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(page = 1, count = 10) {\r\n        return instance.get(`users?page=${page}&count=${count}`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n\r\n    unFollowUser(id) {\r\n        return (\r\n            instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${id}`)\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n        )\r\n    },\r\n\r\n    followUser(id) {\r\n        return (\r\n            instance.post(`follow/${id}`)\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n        )\r\n    }\r\n}\r\n\r\nexport const userProfileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n\r\n    updateUserStatus(status) {\r\n        return instance.put('profile/status', {status})\r\n            .then(res => {\r\n                return res\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n    login(formData) {\r\n        return instance.post('auth/login', formData)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    }\r\n}\r\n","import {userProfileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_PROFILE = 'SET-PROFILE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst SET_STATUS = 'SET-STATUS';\r\n\r\nlet id = 0;\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {postId: `${++id}`, post: \"123\"},\r\n        {postId: `${++id}`, post: \"456\"},\r\n        {postId: `${++id}`, post: \"789\"},\r\n        {postId: `${++id}`, post: \"qwerty\"},\r\n        {postId: `${++id}`, post: \"zxcv\"},\r\n        {postId: `${++id}`, post: \"asdf\"},\r\n        {postId: `${++id}`, post: \"loool\"},\r\n    ],\r\n    profile: null,\r\n    status: 'Изменить статус...',\r\n    isFetching: false\r\n};\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                postId: ++id,\r\n                post: action.newPostText\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addPost = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n})\r\n\r\nexport const setProfile = (profile) => ({\r\n    type: SET_PROFILE,\r\n    profile\r\n})\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const getProfile = (userId) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true))\r\n        userProfileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setProfile(data));\r\n                // this.props.setTotalCount(res.data.totalCount);\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n        userProfileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setStatus(data));\r\n                // this.props.setTotalCount(res.data.totalCount);\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return (dispatch) => {\r\n        userProfileAPI.updateUserStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setStatus(data));\r\n                }\r\n                // this.props.setTotalCount(res.data.totalCount);\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent;\r\n}","import Profile from \"./Profile\";\r\nimport {addPost, getProfile, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) userId = this.props.myId\r\n\r\n        this.props.getProfile(userId);\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Profile {...this.props}/>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.Profile.posts,\r\n        profile: state.Profile.profile,\r\n        status: state.Profile.status,\r\n        isFetching: state.Profile.isFetching,\r\n        myId: state.auth.data.id\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {addPost, getProfile, updateUserStatus}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n// let authRedirectContainer = withAuthRedirect(ProfileContainer);\r\n//\r\n// let WithURLDataContainerComponent = withRouter(authRedirectContainer);\r\n//\r\n//\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(WithURLDataContainerComponent);","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW_USER = 'FOLLOW-USER';\r\nconst UNFOLLOW_USER = 'UNFOLLOW-USER';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_PAGE = 'SET-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst SET_SHORT_PAGES = 'SET-SHORT-PAGES';\r\nconst SWITCH_LEFT_PAGE = 'SWITCH-LEFT-PAGE';\r\nconst SWITCH_RIGHT_PAGE = 'SWITCH-RIGHT-PAGE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_FOLLOWING_PROCESS = 'TOGGLE-FOLLOWING-PROCESS';\r\n// const ADD_FRIEND = 'ADD-FRIEND';\r\n// const REMOVE_FRIEND = 'REMOVE-FRIEND';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    friends: [],\r\n    count: 10,\r\n    totalCount: 1,\r\n    page: 1,\r\n    shortPages: [1, 2, 3, 4, 5, '...'],\r\n    toLeftPage: false,\r\n    toRightPage: true,\r\n    isFetching: false,\r\n    followingInProcess: []\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                friends: [...state.friends, action.id],\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                friends: state.friends.filter(id => id !== action.id),\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            };\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            };\r\n\r\n        case SET_SHORT_PAGES:\r\n            return {\r\n                ...state,\r\n                shortPages: action.shortPages,\r\n            }\r\n\r\n        case SWITCH_LEFT_PAGE:\r\n            return {\r\n                ...state,\r\n                toLeftPage: action.switchLeftPage\r\n            }\r\n\r\n        case SWITCH_RIGHT_PAGE:\r\n            return {\r\n                ...state,\r\n                toRightPage: action.switchRightPage\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_FOLLOWING_PROCESS:\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.isFetching\r\n                    ? [...state.followingInProcess, action.id]\r\n                    : state.followingInProcess.filter(id => id !== action.id)\r\n            }\r\n\r\n        // case ADD_FRIEND:\r\n        //     return {\r\n        //         ...state,\r\n        //         friends: [...state.friends, action.id]\r\n        //     }\r\n        //\r\n        // case REMOVE_FRIEND:\r\n        //     return {\r\n        //         ...state,\r\n        //         friends: state.friends.filter(id => id !== action.id)\r\n        //     }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const followUser = (id) => ({\r\n    type: FOLLOW_USER,\r\n    id\r\n})\r\n\r\nexport const unfollowUser = (id) => ({\r\n    type: UNFOLLOW_USER,\r\n    id\r\n})\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\n\r\nexport const setPage = (page) => ({\r\n    type: SET_PAGE,\r\n    page\r\n})\r\nexport const setTotalCount = (totalCount) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    totalCount\r\n})\r\n\r\nexport const setShortPages = (shortPages) => ({\r\n    type: SET_SHORT_PAGES,\r\n    shortPages,\r\n})\r\n\r\nexport const switchLeftPage = (switchLeftPage) => ({\r\n    type: SWITCH_LEFT_PAGE,\r\n    switchLeftPage\r\n})\r\n\r\nexport const switchRightPage = (switchRightPage) => ({\r\n    type: SWITCH_RIGHT_PAGE,\r\n    switchRightPage\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const toggleFollowingProcess = (isFetching, id) => ({\r\n    type: TOGGLE_FOLLOWING_PROCESS,\r\n    isFetching,\r\n    id\r\n})\r\n\r\n// export const addFriend = (id) => ({\r\n//     type: ADD_FRIEND,\r\n//     id\r\n// })\r\n//\r\n// export const removeFriend = (id) => ({\r\n//     type: REMOVE_FRIEND,\r\n//     id\r\n// })\r\n\r\nexport const requestUsers = (page, count) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(page, count)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount));\r\n                dispatch(toggleIsFetching(false));\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProcess(true, id))\r\n        usersAPI.followUser(id)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followUser(id));\r\n                }\r\n                dispatch(toggleFollowingProcess(false, id))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProcess(true, id))\r\n        usersAPI.unFollowUser(id)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollowUser(id));\r\n                }\r\n                dispatch(toggleFollowingProcess(false, id))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","import React from 'react';\r\nimport style from './Users.module.css';\r\n// import User from \"./User/User\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {requestUsers} from \"../../Redux/users-reducer\";\r\n\r\nclass Users extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.requestUsers(this.props.page, this.props.count);\r\n\r\n    };\r\n\r\n\r\n    // userItem = this.props.users.map(user =>\r\n    //\r\n    //     <div className={style.User}>\r\n    //         <div className={style.userAvatar}>\r\n    //             <img src={user.photos.small} alt=\"user-avatar\" className={style.userAvatarImg}/>\r\n    //         </div>\r\n    //         <div className={style.userData}>\r\n    //             <div>\r\n    //                 <div className={style.userName}><h2>{user.name}</h2></div>\r\n    //                 <div className={style.userDescription}>{user.status}</div>\r\n    //             </div>\r\n    //             <div className={style.isFollowedButton}>\r\n    //                 {\r\n    //                     user.followed\r\n    //                         ? <button onClick={\r\n    //                             () => {\r\n    //                                 this.props.unfollowUser(user.id)\r\n    //                             }\r\n    //                         }>Unfollow</button>\r\n    //\r\n    //                         : <button onClick={\r\n    //                             () => {\r\n    //                                 this.props.followUser(user.id)\r\n    //                             }\r\n    //                         }>Follow</button>\r\n    //                 }\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    // )\r\n\r\n\r\n    onPageChanged = (page, pagesCount, shortPages) => {\r\n        this.props.setPage(page);\r\n        if (page === 1) {\r\n            this.props.switchLeftPage(false)\r\n        } else {\r\n            this.props.switchLeftPage(true)\r\n        }\r\n        if (page === pagesCount) {\r\n            this.props.switchRightPage(false)\r\n        } else {\r\n            this.props.switchRightPage(true)\r\n        }\r\n\r\n        this.props.requestUsers(page, this.props.count);\r\n        // this.props.toggleIsFetching(true)\r\n        // usersAPI.requestUsers(page, this.props.count)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.toggleIsFetching(false)\r\n        //     })\r\n\r\n        // let pages = [pagesCount-4, pagesCount-3, pagesCount-2, pagesCount-1, pagesCount]\r\n        // console.log(pages)\r\n        // if (pages.includes(page)) {\r\n        //     shortPages = [1, '...'];\r\n        //     for (let i = 2; i > 6; i++) {\r\n        //         shortPages[i] = pages[i-2];\r\n        //     }\r\n        //     console.log(shortPages)\r\n        //     this.props.setShortPages(shortPages);\r\n        // }\r\n    }\r\n\r\n    changePage = (shortPages, num, pagesCount) => {\r\n        let page = this.props.page;\r\n        page = page + num;\r\n        this.props.setPage(page);\r\n\r\n        page === 1\r\n            ? this.props.switchLeftPage(false)\r\n            : this.props.switchLeftPage(true)\r\n\r\n        page === pagesCount\r\n            ? this.props.switchRightPage(false)\r\n            : this.props.switchRightPage(true)\r\n\r\n        this.props.requestUsers(page, this.props.count)\r\n        // this.props.toggleIsFetching(true)\r\n        // usersAPI.requestUsers(page, this.props.count)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.toggleIsFetching(false)\r\n        //     })\r\n\r\n        if (!shortPages.includes(page)) {\r\n            this.props.toggleIsFetching(true)\r\n            for (let i = 0; i < 5; i++) {\r\n                shortPages[i] = shortPages[i] + num;\r\n            }\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setShortPages(shortPages);\r\n        }\r\n\r\n        // if (page === pagesCount-4) {\r\n        //     shortPages = [1, '...']\r\n        //     for (let i = 2; i < 7; i--) {\r\n        //         shortPages[i] = pagesCount-4 - (i-1);\r\n        //     }\r\n        //     this.props.setShortPages(shortPages);\r\n        // }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.count);\r\n\r\n        let pages = [];\r\n\r\n        let shortPages = this.props.shortPages;\r\n\r\n        if (pagesCount !== 1) {\r\n\r\n            for (let i = 1; i <= pagesCount; i++) {\r\n                pages.push(i);\r\n                if (i === pagesCount) {\r\n                    shortPages.push(pages.length);\r\n                    shortPages.splice(7, 1);\r\n\r\n                }\r\n\r\n            }\r\n            // shortPages.push(pages.length);\r\n\r\n\r\n        }\r\n\r\n\r\n        // let Page = (page) => {\r\n        //     return (\r\n        //         <span className={`\r\n        //         ${this.props.page === page && style.currentPage}\r\n        //         ${style.page}`}\r\n        //               onClick={\r\n        //                   (e) => {\r\n        //                       this.onPageChanged(page)\r\n        //                   }\r\n        //\r\n        //               }>{page}</span>\r\n        //     )\r\n        //\r\n        //\r\n        // }\r\n\r\n        let Page = (props) => {\r\n\r\n            if (props.page === '...') {\r\n                return <span key={props.page}\r\n                             style={{cursor: 'pointer', margin: 5 + 'px', fontSize: 25 + 'px'}}>{props.page}</span>\r\n            } else {\r\n                return (\r\n                    <span key={props.page} className={`\r\n                                ${this.props.page === props.page && style.currentPage}\r\n                                ${style.page}`}\r\n                          onClick={\r\n                              (e) => {\r\n                                  this.onPageChanged(props.page, pagesCount, shortPages)\r\n                              }\r\n\r\n                          }>{props.page}</span>\r\n                )\r\n            }\r\n\r\n        }\r\n\r\n        let num;\r\n\r\n\r\n        return (\r\n            <div className={style.Users}>\r\n                <div className={style.usersArea}>\r\n\r\n                    {this.props.isFetching ? <Preloader/> :\r\n                        <div className={style.pages}>\r\n                            {\r\n                                pages.length > 10\r\n                                    ?\r\n                                    <span>\r\n\r\n                                    {\r\n                                        this.props.toLeftPage\r\n                                            ? <span>\r\n                                                <span className={style.navs} onClick={() => {\r\n                                                    num = -10;\r\n                                                    this.changePage(shortPages, num, pagesCount)\r\n                                                }}>⫷</span>\r\n                                                <span className={style.navs} onClick={() => {\r\n                                                    num = -1;\r\n                                                    this.changePage(shortPages, num, pagesCount)\r\n                                                }}>◄</span>\r\n                                            </span>\r\n                                            : null\r\n                                    }\r\n                                        <span>\r\n                                        {this.props.shortPages.map(page => <Page page={page} key={page}/>)}\r\n                                    </span>\r\n                                        {\r\n                                            this.props.toRightPage\r\n                                                ? <span>\r\n                                                <span className={style.navs} onClick={() => {\r\n                                                    num = 1;\r\n                                                    this.changePage(shortPages, num, pagesCount)\r\n                                                }}>►</span>\r\n                                                <span className={style.navs} onClick={() => {\r\n                                                    num = 10;\r\n                                                    this.changePage(shortPages, num, pagesCount)\r\n                                                }}>⫸</span>\r\n                                            </span>\r\n                                                : null\r\n                                        }\r\n\r\n                                </span>\r\n\r\n                                    : pages.map(page => <Page page={page}/>)\r\n\r\n                            }\r\n\r\n                            {/*{*/}\r\n                            {/*    pages.map(page => <Page page={page} /> )*/}\r\n                            {/*}*/}\r\n\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        this.props.users.map(user =>\r\n\r\n                            <div className={style.User} key={user.id}>\r\n                                <div className={style.userAvatar}>\r\n\r\n                                    <NavLink to={`/profile/${user.id}`}>\r\n                                        {\r\n                                            user.photos.small === null\r\n                                                ? <img\r\n                                                    src=\"http://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png\"\r\n                                                    alt=\"user-avatar\"\r\n                                                    className={style.userAvatarImg}/>\r\n                                                : <img src={user.photos.small} alt=\"user-avatar\"\r\n                                                       className={style.userAvatarImg} style={{borderRadius: `100%`}}/>\r\n                                        }\r\n                                    </NavLink>\r\n\r\n                                    {/*<img src={user.photos.small} alt=\"user-avatar\" className={style.userAvatarImg}/>*/}\r\n                                </div>\r\n                                <div className={style.userData}>\r\n                                    <div>\r\n                                        <NavLink to={`/profile/${user.id}`} className={style.userName}>\r\n                                            <h2>{user.name}</h2>\r\n                                        </NavLink>\r\n                                        <div className={style.userDescription}>{user.status}</div>\r\n                                    </div>\r\n                                    <div className={style.followingButton}>\r\n                                        {\r\n                                            user.followed\r\n                                                ?\r\n                                                this.props.followingInProcess.some(id => id === user.id)\r\n                                                    ? <div className={style.preloader}><Preloader/></div>\r\n                                                    :\r\n                                                    <button\r\n                                                        disabled={this.props.followingInProcess.some(id => id === user.id)}\r\n                                                        onClick={\r\n                                                            () => {\r\n                                                                this.props.unfollow(user.id)\r\n                                                            }\r\n                                                        }>Unfollow</button>\r\n\r\n\r\n                                                :\r\n                                                this.props.followingInProcess.some(id => id === user.id)\r\n                                                    ? <div className={style.preloader}><Preloader/></div>\r\n                                                    :\r\n                                                    <button\r\n                                                        disabled={this.props.followingInProcess.some(id => id === user.id)}\r\n                                                        onClick={\r\n                                                            () => {\r\n                                                                this.props.follow(user.id);\r\n                                                            }\r\n                                                        }>Follow</button>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Users;\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.Users.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users;\r\n})\r\n\r\nexport const getCount = (state) => {\r\n    return state.Users.count;\r\n}\r\n\r\nexport const getTotalCount = (state) => {\r\n    return state.Users.totalCount;\r\n}\r\n\r\nexport const getPage = (state) => {\r\n    return state.Users.page;\r\n}\r\n\r\nexport const getShortPages = (state) => {\r\n    return state.Users.shortPages;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.Users.isFetching;\r\n}\r\n\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.Users.followingInProcess;\r\n}","import Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setPage,\r\n    setShortPages,\r\n    switchLeftPage,\r\n    switchRightPage, requestUsers, follow, unfollow\r\n} from \"../../Redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCount,\r\n    getFollowingInProcess,\r\n    getIsFetching,\r\n    getPage,\r\n    getShortPages,\r\n    getTotalCount,\r\n    getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.Users.users,\r\n//         count: state.Users.count,\r\n//         totalCount: state.Users.totalCount,\r\n//         page: state.Users.page,\r\n//         shortPages: state.Users.shortPages,\r\n//         toLeftPage: state.Users.toLeftPage,\r\n//         toRightPage: state.Users.toRightPage,\r\n//         isFetching: state.Users.isFetching,\r\n//         followingInProcess: state.Users.followingInProcess,\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        count: getCount(state),\r\n        totalCount: getTotalCount(state),\r\n        page: getPage(state),\r\n        shortPages: getShortPages(state),\r\n        toLeftPage: state.Users.toLeftPage,\r\n        toRightPage: state.Users.toRightPage,\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state),\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    setPage,\r\n    setShortPages,\r\n    switchLeftPage,\r\n    switchRightPage,\r\n    requestUsers,\r\n    follow,\r\n    unfollow\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Users)\r\n\r\n// let authRedirectComponent = withAuthRedirect(Users);\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(authRedirectComponent);","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// import BurgerMenu from \"../Common/BurgerMenu\";\r\n\r\nfunction NavBar(props) {\r\n    return (\r\n        <div className={style.NavBar}>\r\n            {/*<BurgerMenu/>*/}\r\n            <NavLink to='/' className={style.Logo}>Social Web</NavLink>\r\n            {\r\n                props.isAuth\r\n                    ?\r\n                    <div className={style.navs} style={{gridTemplateColumns: `repeat(4, 1fr)`}}>\r\n                        <NavLink to=\"/profile\" className={style.navItem}>Profile</NavLink>\r\n                        {/*<NavLink to=\"/messages\" className={style.navItem}>Messages</NavLink>*/}\r\n                        <NavLink to=\"/friends\" className={style.navItem}>Friends</NavLink>\r\n                        <NavLink to=\"/users\" className={style.navItem}>Users</NavLink>\r\n                        <div className={style.navItem}>\r\n                            <div className={`${style.userStateWrapper} ${style.logout}`}>\r\n                                <div className={style.userState} onClick={props.logout}>\r\n                                    <div>Logout</div>\r\n                                    <div className={style.userDataImage}>\r\n                                        <img src=\"http://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png\"\r\n                                             alt=\"profile-image\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <></>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className={style.navs} style={{gridTemplateColumns: `3fr 1fr`}}>\r\n                        <div className={style.navItem}></div>\r\n                        <div className={style.navItem}>\r\n                            <div className={`${style.userStateWrapper} ${style.login}`}>\r\n                                <div className={style.userState}>\r\n                                    <NavLink to='/login'>\r\n                                        <div>Login</div>\r\n                                    </NavLink>\r\n                                    <div className={style.userDataImage}>\r\n                                        <img src=\"http://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png\"\r\n                                             alt=\"profile-image\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <></>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            {/*<div className={style.pushLogin}>Welcome, {props.login}!</div>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\nlet initialState = {\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null\r\n    },\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUserData = (data, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {data, isAuth},\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const authMe = () => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    // let {id, login, email} = data.data;\r\n                    dispatch(setUserData(data.data, true));\r\n                }\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (formData) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        authAPI.login(formData)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authMe());\r\n                } else if (data.resultCode === 1) {\r\n                    let errorMessage = data.messages.length > 0 ? data.messages[0] : \"Some error.\"\r\n                    let action = stopSubmit('login', {_error: errorMessage});\r\n                    dispatch(action)\r\n                }\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        authAPI.logout()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setUserData(null, false));\r\n                }\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport NavBar from \"./NavBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\nclass NavBarContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <NavBar {...this.props} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isFetching: state.auth.isFetching,\r\n    login: state.auth.login\r\n});\r\n\r\nlet mapDispatchToProps = ({\r\n    logout\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBarContainer);\r\n","import React from 'react';\r\nimport {userProfileAPI} from \"../../api/api\";\r\nimport * as axios from \"axios\";\r\n\r\nclass Friends extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let name = [];\r\n\r\n        this.props.friends.map(friend => {\r\n\r\n            axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${friend}`)\r\n                .then(res => {\r\n                    name.push(res.data.fullName)\r\n                })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.name)\r\n        debugger\r\n        return (\r\n            <div>{this.name}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friends;","const UNFOLLOW_FRIEND = 'UNFOLLOW-FRIEND';\r\nconst SET_FRIENDS = 'SET-FRIENDS';\r\nconst SET_PAGE = 'SET-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\nlet initialState = {\r\n    friends: [],\r\n    count: 100,\r\n    totalCount: 1,\r\n    page: 1,\r\n    isFetching: false\r\n};\r\n\r\nlet friendsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case UNFOLLOW_FRIEND:\r\n            return {\r\n                ...state,\r\n                users: state.friends.map(friend => {\r\n                    if (friend.id === action.id) {\r\n                        return {...friend, followed: false}\r\n                    }\r\n                    return friend;\r\n                })\r\n            };\r\n\r\n        case SET_FRIENDS:\r\n            return {\r\n                ...state,\r\n                friends: action.friends\r\n            };\r\n\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            };\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return  {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const unfollowFriend = (id) => ({\r\n    type: UNFOLLOW_FRIEND,\r\n    id\r\n})\r\n\r\nexport const setFriends = (friends) => ({\r\n    type: SET_FRIENDS,\r\n    friends\r\n})\r\n\r\nexport const setPage = (page) => ({\r\n    type: SET_PAGE,\r\n    page\r\n})\r\nexport const setTotalCount = (totalCount) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    totalCount\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport default friendsReducer;\r\n","import React from 'react';\r\nimport Friends from \"./Friends\";\r\nimport {connect} from \"react-redux\";\r\nimport {setFriends, setPage, setTotalCount, toggleIsFetching, unfollowFriend} from \"../../Redux/friends-reducer\";\r\n\r\nclass FriendsContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Friends {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    friends: state.Users.friends,\r\n    count: state.Friends.count,\r\n    totalCount: state.Friends.totalCount,\r\n    page: state.Friends.page,\r\n    isFetching: state.Users.isFetching\r\n})\r\n\r\nlet mapDispatchToProps = ({\r\n    unfollowFriend,\r\n    setFriends,\r\n    setPage,\r\n    setTotalCount,\r\n    toggleIsFetching\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsContainer);\r\n\r\n","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport errorStyle from '../Common/FormsFields/FormsFields.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsFields/FormsFields\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst minLength8 = minLengthCreator(8);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.Form}>\r\n            <div>\r\n                <Field\r\n                    className={style.Field}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name={\"email\"}\r\n                    component={Input}\r\n                    validate={[required, maxLength30]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    className={style.Field}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name={\"password\"}\r\n                    component={Input}\r\n                    validate={[required, minLength8]}\r\n                />\r\n            </div>\r\n            {\r\n                props.error &&\r\n                <div className={errorStyle.commonError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div className={style.controls}>\r\n                <div style={{color: `#0e1d27`, fontWeigh: `bolder`, fontSize: `1em`}}>\r\n                    <Field className={style.rememberMe}\r\n                           type=\"checkbox\"\r\n                           name={\"rememberMe\"}\r\n                           component={\"input\"}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n                <button className={style.btn}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData);\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    return (\r\n        <div className={style.Login}>\r\n            <div className={style.loginArea}>\r\n                <h1>LOGIN</h1>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authMe} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nlet appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMe());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport './Moose.css';\r\n\r\nexport const Moose = (props) => {\r\n    return (\r\n        <div>\r\n            <div id=\"bg\"></div>\r\n\r\n\r\n            <div id=\"world\">\r\n\r\n\r\n                <div id=\"mooseRotator\">\r\n\r\n                    <div id=\"mooseTranslator\">\r\n\r\n                        <div id=\"mooseShadow\"></div>\r\n\r\n                        <div id=\"moose\">\r\n\r\n                            <div id=\"mooseBody\">\r\n\r\n                                <div id=\"mooseFront\">\r\n                                    <div id=\"mooseFront_a\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_b\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_c\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_d\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_e\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_f\" className=\"mooseFrontItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseBack\">\r\n                                    <div id=\"mooseBack_a\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_b\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_c\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_d\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_e\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_f\" className=\"mooseBackItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseLeft\">\r\n                                    <div id=\"mooseLeft_a\" className=\"mooseLeftItem\"></div>\r\n                                    <div id=\"mooseLeft_b\" className=\"mooseLeftItem\"></div>\r\n                                    <div id=\"mooseLeft_c\" className=\"mooseLeftItem\"></div>\r\n                                    <div id=\"mooseLeft_d\" className=\"mooseLeftItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseRight\">\r\n                                    <div id=\"mooseRight_a\" className=\"mooseRightItem\"></div>\r\n                                    <div id=\"mooseRight_b\" className=\"mooseRightItem\"></div>\r\n                                    <div id=\"mooseRight_c\" className=\"mooseRightItem\"></div>\r\n                                    <div id=\"mooseRight_d\" className=\"mooseRightItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseTop\">\r\n                                    <div id=\"mooseTop_a\" className=\"mooseTopItem\"></div>\r\n                                    <div id=\"mooseTop_b\" className=\"mooseTopItem\"></div>\r\n                                    <div id=\"mooseTop_c\" className=\"mooseTopItem\"></div>\r\n                                    <div id=\"mooseTop_d\" className=\"mooseTopItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseBottom\">\r\n                                    <div id=\"mooseBottom_a\" className=\"mooseBottomItem\"></div>\r\n                                    <div id=\"mooseBottom_b\" className=\"mooseBottomItem\"></div>\r\n                                    <div id=\"mooseBottom_c\" className=\"mooseBottomItem\"></div>\r\n                                    <div id=\"mooseBottom_d\" className=\"mooseBottomItem\"></div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div id=\"mooseLegLeft\">\r\n\r\n                                <div id=\"mooseLegLeft_a\" className=\"mooseLegLeftItem mooseBottomItem\"></div>\r\n                                <div id=\"mooseLegLeft_b\" className=\"mooseLegLeftItem mooseLeftItem\"></div>\r\n                                <div id=\"mooseLegLeft_c\" className=\"mooseLegLeftItem mooseRightItem\"></div>\r\n                                <div id=\"mooseLegLeft_d\" className=\"mooseLegLeftItem mooseFrontItem\"></div>\r\n                                <div id=\"mooseLegLeft_e\" className=\"mooseLegLeftItem mooseBackItem\"></div>\r\n                                <div id=\"mooseLegLeft_f\" className=\"mooseLegLeftItem mooseTopItem\"></div>\r\n                            </div>\r\n\r\n                            <div id=\"mooseLegRight\">\r\n                                <div id=\"mooseLegRight_a\" className=\"mooseLegRightItem mooseBottomItem\"></div>\r\n                                <div id=\"mooseLegRight_b\" className=\"mooseLegRightItem mooseLeftItem\"></div>\r\n                                <div id=\"mooseLegRight_c\" className=\"mooseLegRightItem mooseRightItem\"></div>\r\n                                <div id=\"mooseLegRight_d\" className=\"mooseLegRightItem mooseFrontItem\"></div>\r\n                                <div id=\"mooseLegRight_e\" className=\"mooseLegRightItem mooseBackItem\"></div>\r\n                                <div id=\"mooseLegRight_f\" className=\"mooseLegRightItem mooseTopItem\"></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Switch, Route, withRouter} from \"react-router-dom\";\r\nimport Messages from \"./Components/Messages/Messages\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport NavBarContainer from \"./Components/NavBar/NavBarContainer\";\r\nimport FriendsContainer from \"./Components/Friends/FriendsContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./Components/Common/Preloader\";\r\nimport {Moose} from \"./Components/Common/Moose\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) return <Moose/>\r\n        // if (!this.props.initialized) return <Preloader/>\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <NavBarContainer/>\r\n                <Switch>\r\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                    {/*<Route path='/messages' render={() => <Messages/>}/>*/}\r\n                    <Route path='/friends' render={() => <FriendsContainer/>}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/login' render={() => <Login/>}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.App.initialized\r\n})\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    Profile: profileReducer,\r\n    Users: usersReducer,\r\n    auth: authReducer,\r\n    Friends: friendsReducer,\r\n    form: formReducer,\r\n    App: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formField\":\"FormsFields_formField__1ioKc\",\"error\":\"FormsFields_error__ywANb\",\"commonError\":\"FormsFields_commonError__34Xk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__fNY0P\",\"messagesArea\":\"Messages_messagesArea__ugZXV\",\"Users\":\"Messages_Users__11ljE\",\"userName\":\"Messages_userName__dgv7v\",\"userMessages\":\"Messages_userMessages__1_5e2\",\"Message\":\"Messages_Message__2_UUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__31unx\",\"profileArea\":\"Profile_profileArea__1TzQu\",\"avatar\":\"Profile_avatar__3mjQw\",\"posts\":\"Profile_posts__KKBI1\",\"description\":\"Profile_description__1gsND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__1FENy\",\"popupBody\":\"Popup_popupBody__1TKoh\",\"popupInner\":\"Popup_popupInner__2Jb_P\",\"close\":\"Popup_close__7D4_f\",\"open\":\"Popup_open__1zFTy\"};","module.exports = __webpack_public_path__ + \"static/media/git-profile.15f33404.jpg\";"],"sourceRoot":""}