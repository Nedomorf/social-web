{"version":3,"sources":["Components/Users/Users.module.css","Components/NavBar/NavBar.module.css","Components/Profile/Post/Post.module.css","images/preloader.svg","Components/Profile/AddPost.module.css","images/git-profile.jpg","Components/Login/Login.module.css","Components/Messages/Messages.jsx","Components/Profile/Post/Post.jsx","Components/Common/Preloader.jsx","Components/Profile/ProfileStatus.jsx","utils/validators/validators.js","Components/Common/FormsFields/FormsFields.js","Components/Profile/AddPostForm.jsx","Components/Profile/ProfileAvatar/ProfileAvatar.jsx","Components/Common/Popup.jsx","Components/Profile/ProfileAvatar/UploadProfilePhoto.jsx","Components/Profile/ProfileAvatar/ProfileAvatarDminantColor.js","api/api.js","Redux/profile-reducer.js","Components/Profile/Profile.jsx","hoc/withAuthRedirect.js","Components/Profile/ProfileContainer.jsx","Redux/users-reducer.js","Components/Users/Users.jsx","Redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/NavBar/NavBar.jsx","Redux/auth-reducer.js","Components/NavBar/NavBarContainer.jsx","Components/Friends/Friends.jsx","Redux/friends-reducer.js","Components/Friends/FriendsContainer.jsx","Components/Login/Login.jsx","Redux/app-reducer.js","Components/Common/Moose.jsx","App.js","serviceWorker.js","Redux/store.jsx","index.js","Components/Profile/Profile.module.css","Components/Common/FormsFields/FormsFields.module.css","Components/Messages/Messages.module.css","Components/Common/Popup.module.css"],"names":["module","exports","Messages","Post","props","className","style","post","Preloader","src","preloader","alt","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateUserStatus","type","value","onChange","e","currentTarget","autoFocus","myId","userId","onClick","required","maxLengthCreator","maxLength","length","Textarea","input","meta","hasError","touched","error","formField","Input","maxLength10","ReduxPostFrom","reduxForm","form","onSubmit","handleSubmit","addPost","Field","placeholder","name","component","validate","AddPostForm","values","dispatch","newPostText","reset","ProfileAvatar","avatarStyle","profilePhoto","Object","assign","borderColor","color","borderRadius","borderStyle","Popup","React","Component","closeModal","setVisible","popup","visible","open","popupBody","popupInner","background","RGB","r","g","b","target","files","updateUserAvatar","refreshProfile","width","height","margin","close","ProfileAvatarDominantColor","setRGB","profile","photos","large","getAverageColor","then","rgb","IMAGE","instance","axios","baseURL","withCredentials","headers","usersAPI","page","count","get","res","data","id","delete","userProfileAPI","put","avatar","formData","FormData","append","authAPI","initialState","posts","postId","isFetching","toggleIsFetching","profileReducer","state","action","newPost","Profile","console","log","marginTop","scale","postItem","map","key","profileArea","marginBottom","display","alignItems","justifyContent","transform","position","filter","ava","fullName","description","getProfile","postsArea","reverse","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","RedirectComponent","this","to","connect","mapDispatchToProps","resultCode","setAvatar","compose","withRouter","match","params","users","friends","totalCount","shortPages","toLeftPage","toRightPage","followingInProcess","toggleFollowingProcess","usersReducer","user","followed","switchLeftPage","switchRightPage","Users","onPageChanged","pagesCount","setPage","requestUsers","changePage","num","includes","i","setShortPages","Math","ceil","pages","push","splice","Page","cursor","fontSize","currentPage","usersArea","navs","User","userAvatar","small","userAvatarImg","userData","userName","userDescription","followingButton","some","disabled","unfollow","follow","getUsers","createSelector","getCount","getTotalCount","getPage","getShortPages","getIsFetching","getFollowingInProcess","items","followUser","unfollowUser","NavBar","minLength","Logo","gridTemplateColumns","navItem","userStateWrapper","logout","userState","userDataImage","login","email","setUserData","payload","authMe","authReducer","NavBarContainer","Friends","friend","friendsReducer","FriendsContainer","unfollowFriend","setFriends","setTotalCount","maxLength30","minLength8","LoginReduxForm","Form","errorStyle","commonError","controls","fontWeigh","rememberMe","btn","errorMessage","messages","stopSubmit","_error","Login","loginArea","initialized","appReducer","Moose","App","initializeApp","path","render","UsersContainer","promise","Promise","all","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d341895b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__1U0yd\",\"usersArea\":\"Users_usersArea__Nugy0\",\"User\":\"Users_User__3Tloc\",\"userData\":\"Users_userData__1RDzu\",\"userAvatarImg\":\"Users_userAvatarImg__1dRSf\",\"followingButton\":\"Users_followingButton__Pmtvt\",\"userName\":\"Users_userName__2hmsM\",\"pages\":\"Users_pages__2YOIn\",\"currentPage\":\"Users_currentPage__2Svw5\",\"page\":\"Users_page__1t6E2\",\"navs\":\"Users_navs__aVHZd\",\"preloader\":\"Users_preloader__NmOsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__L3TMF\",\"navs\":\"NavBar_navs__oinLb\",\"navItem\":\"NavBar_navItem__dV4mT\",\"Logo\":\"NavBar_Logo__3oHk4\",\"userStateWrapper\":\"NavBar_userStateWrapper__23ES8\",\"logout\":\"NavBar_logout__19dEL\",\"login\":\"NavBar_login__1eLI-\",\"userState\":\"NavBar_userState__1qH3A\",\"pushLogin\":\"NavBar_pushLogin__1cic6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__1mnBo\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.f066f360.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"AddPost_addPost__45hFV\"};","module.exports = __webpack_public_path__ + \"static/media/git-profile.15f33404.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2yd4K\",\"loginArea\":\"Login_loginArea__2tLLM\",\"btn\":\"Login_btn__3YNBA\",\"Field\":\"Login_Field__fpsIq\",\"Form\":\"Login_Form__1A8lK\",\"controls\":\"Login_controls__2PIkA\",\"rememberMe\":\"Login_rememberMe__8QirL\"};","import React from 'react';\r\nimport style from './Messages.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.Message}>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque dolores doloribus eaque expedita hic\r\n            laudantium magnam nihil officia perferendis possimus, quam quasi quia quisquam quod quos ratione sapiente\r\n            sit totam.\r\n        </div>\r\n    );\r\n}\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <NavLink to='/' className={style.userName}>\r\n            <h3>User Name</h3>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nfunction Messages() {\r\n    return (\r\n        <div className={style.Messages}>\r\n            <div className={style.messagesArea}>\r\n                <div className={style.Users}>\r\n                    <User/>\r\n                    <User/>\r\n                    <User/>\r\n                </div>\r\n                <div className={style.userMessages}>\r\n                    <Message/>\r\n                    <Message/>\r\n                    <Message/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.Post}>\r\n            {props.post}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import preloader from \"../../images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nfunction Preloader(props) {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt=\"preloader\" style={props.style}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (prevProps.status !== this.props.status) {\r\n    //         this.setState({\r\n    //             status: this.props.status\r\n    //         })\r\n    //     }\r\n    // }\r\n    //\r\n    // state = {\r\n    //     editMode: false,\r\n    //     status: this.props.status\r\n    // }\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const enableEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const disableEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !editMode\r\n                    ? (props.myId === props.userId)\r\n                        ?\r\n                        <div onClick={enableEditMode}>\r\n                            <h3>\r\n                                {status}\r\n                            </h3>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <h3>\r\n                                {status}\r\n                            </h3>\r\n                        </div>\r\n\r\n                    : <div onBlur={disableEditMode}>\r\n                        <input type=\"text\" value={status} onChange={onStatusChange} autoFocus={true}/>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","export const required = value => {\r\n    if (!value) return \"The field is required.\";\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols.`;\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => value => {\r\n    if (value && value.length < minLength) return `Min length is ${minLength} symbols.`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport style from './FormsFields.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${style.formField} ${hasError ? style.error : \"\"}`}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <div>{meta.error}</div> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${style.formField} ${hasError ? style.error : \"\"}`}>\r\n            { hasError && <div>{meta.error}</div> }\r\n            <input {...input} {...props} />\r\n        </div>\r\n    )\r\n}","import style from \"./AddPost.module.css\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../Common/FormsFields/FormsFields\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.addPost}>\r\n            <Field\r\n                placeholder={\"New post...\"}\r\n                name=\"newPostText\"\r\n                component={Textarea}\r\n                validate={[required, maxLength10]}\r\n            />\r\n            {/*<textarea onChange={props.changePostText} value={props.newPostText}/>*/}\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet ReduxPostFrom = reduxForm({\r\n    form: 'post',\r\n})(PostForm)\r\n\r\nconst AddPostForm = (props) => {\r\n    let onSubmit = (values, dispatch) => {\r\n        props.addPost(values.newPostText);\r\n        dispatch(reset('post'));\r\n    }\r\n    return (\r\n        <ReduxPostFrom onSubmit={onSubmit}/>\r\n    )\r\n}\r\n\r\nexport default AddPostForm;","import React from \"react\";\r\n\r\nconst ProfileAvatar = (props) => {\r\n    let avatarStyle = props.avatarStyle;\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                props.profilePhoto === null\r\n                    ?\r\n                    <img\r\n                        src=\"http://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png\"\r\n                        alt=\"profile-ava\"\r\n                        // style={{borderColor: props.color}}\r\n                        // style={props.avatarStyle}\r\n                        style={avatarStyle && Object.assign(avatarStyle, {borderColor: props.color})}\r\n                    />\r\n                    : <img src={props.profilePhoto} alt=\"profile-ava\"\r\n                           style={avatarStyle && Object.assign(avatarStyle, {\r\n                               borderRadius: `100%`,\r\n                               borderColor: props.color,\r\n                               borderStyle: `solid`\r\n                           })}\r\n                    />\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileAvatar;","import React from \"react\";\r\nimport style from './Popup.module.css'\r\nimport ProfileAvatar from \"../Profile/ProfileAvatar/ProfileAvatar\";\r\nimport UploadProfilePhoto from \"../Profile/ProfileAvatar/UploadProfilePhoto\";\r\n\r\nconst Popup = (props) => {\r\n\r\n    let modalAvatarStyle = {width: `500px`, height: `500px`, margin: `30px`};\r\n\r\n    const closeModal = () => {\r\n        props.setVisible(false);\r\n    }\r\n\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.updateUserAvatar(e.target.files[0]);\r\n            props.refreshProfile(props.userId);\r\n            props.setVisible(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${style.popup} ${props.visible && style.open}`}>\r\n            <div className={style.popupBody} onClick={closeModal}/>\r\n            <div className={style.popupInner}\r\n                 style={{background: `rgb(` + props.RGB.r + `, ` + props.RGB.g + `, ` + props.RGB.b + `)`}}>\r\n                {/*<UploadProfilePhoto/>*/}\r\n                {\r\n                    (props.myId === props.userId)\r\n                        ? <input type=\"file\" onChange={onPhotoSelected}/>\r\n                        : null\r\n                }\r\n                <ProfileAvatar\r\n                    profilePhoto={props.profilePhoto}\r\n                    avatarStyle={modalAvatarStyle}\r\n                />\r\n                <div onClick={closeModal} className={style.close}>\r\n                    <img src=\"https://img.icons8.com/color/48/000000/close-window.png\" alt='close-modal'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;","import React from 'react';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nclass UploadProfilePhoto extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pictures: [] };\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    onDrop(picture) {\r\n        this.setState({\r\n            pictures: this.state.pictures.concat(picture),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ImageUploader\r\n                withIcon={true}\r\n                buttonText='Choose images'\r\n                onChange={this.onDrop}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadProfilePhoto;","import getAverageColor from \"get-average-color\";\r\nimport IMAGE from \"../../../images/git-profile.jpg\";\r\n\r\nconst ProfileAvatarDominantColor = (setRGB, profile) => {\r\n\r\n    if (profile) {\r\n        profile.photos.large\r\n            ?\r\n            getAverageColor(profile.photos.large).then(rgb => {\r\n                setRGB(rgb);\r\n            })\r\n            :\r\n            getAverageColor(IMAGE).then(rgb => {\r\n                setRGB(rgb);\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileAvatarDominantColor;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"75a2366b-2f8c-4059-8cc9-298369a0c793\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(page = 1, count = 10) {\r\n        return instance.get(`users?page=${page}&count=${count}`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n\r\n    unFollowUser(id) {\r\n        return (\r\n            instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${id}`)\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n        )\r\n    },\r\n\r\n    followUser(id) {\r\n        return (\r\n            instance.post(`follow/${id}`)\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n        )\r\n    }\r\n}\r\n\r\nexport const userProfileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n\r\n    updateUserStatus(status) {\r\n        return instance.put('profile/status', {status})\r\n            .then(res => {\r\n                return res\r\n            })\r\n    },\r\n\r\n    uploadUserAvatar(avatar) {\r\n        const formData = new FormData();\r\n        formData.append('image', avatar);\r\n        return instance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(res => {\r\n                return res\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n    login(formData) {\r\n        return instance.post('auth/login', formData)\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    }\r\n}\r\n","import {userProfileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_PROFILE = 'SET-PROFILE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst SET_AVATAR = 'SET-AVATAR';\r\n\r\nlet id = 0;\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {postId: `${++id}`, post: \"123\"},\r\n        {postId: `${++id}`, post: \"456\"},\r\n        {postId: `${++id}`, post: \"789\"},\r\n        {postId: `${++id}`, post: \"qwerty\"},\r\n        {postId: `${++id}`, post: \"zxcv\"},\r\n        {postId: `${++id}`, post: \"asdf\"},\r\n        {postId: `${++id}`, post: \"loool\"},\r\n    ],\r\n    profile: null,\r\n    status: 'Изменить статус...',\r\n    isFetching: false\r\n};\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                postId: ++id,\r\n                post: action.newPostText\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SET_AVATAR:\r\n            return  {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.avatar}\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addPost = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n})\r\n\r\nexport const setProfile = (profile) => ({\r\n    type: SET_PROFILE,\r\n    profile\r\n})\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\n\r\nexport const setAvatar = (avatar) => ({\r\n    type: SET_AVATAR,\r\n    avatar\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const getProfile = (userId) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true))\r\n        userProfileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                dispatch(setProfile(data));\r\n                // this.props.setTotalCount(res.data.totalCount);\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n        userProfileAPI.getUserStatus(userId)\r\n            .then(data => {\r\n                dispatch(setStatus(data));\r\n                // this.props.setTotalCount(res.data.totalCount);\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return (dispatch) => {\r\n        userProfileAPI.updateUserStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setStatus(data));\r\n                }\r\n                // this.props.setTotalCount(res.data.totalCount);\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateUserAvatar = (avatar) => {\r\n    return (dispatch) => {\r\n        userProfileAPI.uploadUserAvatar(avatar)\r\n            .then(data => {\r\n                debugger\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setAvatar(data.data.photos))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './Profile.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport AddPostForm from \"./AddPostForm\";\r\nimport ProfileAvatar from \"./ProfileAvatar/ProfileAvatar\";\r\nimport Popup from \"../Common/Popup\";\r\nimport ProfileAvatarDominantColor from \"./ProfileAvatar/ProfileAvatarDminantColor\";\r\nimport {updateUserAvatar} from \"../../Redux/profile-reducer\";\r\n\r\nfunction Profile(props) {\r\n\r\n    let [visible, setVisible] = useState(false);\r\n    let [RGB, setRGB] = useState({r: 0, g: 0, b: 0});\r\n\r\n    useEffect(() => {\r\n        let profile = props.profile;\r\n        if (profile) {\r\n            ProfileAvatarDominantColor(setRGB, profile)\r\n        }\r\n    }, [props.profile])\r\n\r\n    console.log('123')\r\n\r\n    const closeModal = () => {\r\n        setVisible(false);\r\n    }\r\n\r\n    const openModal = () => {\r\n        setVisible(true);\r\n    }\r\n\r\n    if (!props.profile) {\r\n        let style = {marginTop: `calc(50vh - 10vh)`, scale: '2'};\r\n        return <Preloader style={style}/>\r\n    }\r\n\r\n    let postItem = props.posts.map(post => <Post key={post.postId} post={post.post}/>);\r\n\r\n    let avatarStyle = {width: `200px`, height: `200px`, margin: `30px`};\r\n    let modalAvatarStyle = {width: `500px`, height: `500px`, margin: `30px`};\r\n\r\n    return (\r\n\r\n        <div className={style.Profile}>\r\n            <div className={style.profileArea}>\r\n\r\n                {\r\n                    props.isFetching\r\n                        ?\r\n                        <div style={{\r\n                            marginBottom: `33vh`,\r\n                            height: `38vh`,\r\n                            display: `flex`,\r\n                            alignItems: `center`,\r\n                            justifyContent: `center`\r\n                        }}>\r\n                            <Preloader style={{transform: `scale(2)`}}/>\r\n                        </div>\r\n\r\n                        :\r\n\r\n                        <div>\r\n                            <div id='avatarArea' style={{\r\n                                height: `35vh`,\r\n                                position: `relative`,\r\n                                filter: `blur(10px)`,\r\n                                background: `rgb(` + RGB.r + `, ` + RGB.g + `, ` + RGB.b + `)`\r\n                            }}>\r\n                            </div>\r\n                            <div className={style.avatar}>\r\n                                <div onClick={openModal} className={style.ava}>\r\n                                    <ProfileAvatar\r\n                                        profilePhoto={props.profile.photos.large}\r\n                                        avatarStyle={avatarStyle}/>\r\n                                </div>\r\n                                <div><h1>{props.profile.fullName}</h1></div>\r\n                            </div>\r\n                            <div className={style.description}>\r\n                                {/*<h3>{props.profile.aboutMe}</h3>*/}\r\n                                <ProfileStatus\r\n                                    status={props.status}\r\n                                    updateUserStatus={props.updateUserStatus}\r\n                                    myId={props.myId}\r\n                                    userId={props.profile.userId}\r\n                                />\r\n                            </div>\r\n\r\n                            <Popup\r\n                                profilePhoto={props.profile.photos.large}\r\n                                avatarStyle={modalAvatarStyle}\r\n                                visible={visible}\r\n                                setVisible={setVisible}\r\n                                RGB={RGB}\r\n                                updateUserAvatar={props.updateUserAvatar}\r\n                                myId={props.myId}\r\n                                userId={props.profile.userId}\r\n                                refreshProfile={props.getProfile}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n                }\r\n                {\r\n                    (props.myId === props.profile.userId)\r\n                        ?\r\n                        <div className={style.posts} style={{marginTop: `-35vh`}}>\r\n                            <AddPostForm {...props}/>\r\n                            <div className={style.postsArea}>\r\n                                {postItem.reverse()}\r\n                            </div>\r\n                        </div>\r\n                        : null\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent;\r\n}","import Profile from \"./Profile\";\r\nimport {addPost, getProfile, updateUserAvatar, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport React, {useEffect} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    let refreshProfile = function () {\r\n        // let userId = this.props.match.params.userId;\r\n        // if (!userId) userId = this.props.myId;\r\n        // this.props.getProfile(userId);\r\n        let userId = props.match.params.userId;\r\n        if (!userId) userId = props.myId;\r\n        props.getProfile(userId);\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [props.match.params.userId])\r\n\r\n    // componentDidMount() {\r\n    //     this.refreshProfile()\r\n    // };\r\n    //\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     // if (this.props.profile && prevProps.profile) {\r\n    //     if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n    //         debugger\r\n    //         this.refreshProfile()\r\n    //     }\r\n    //     if (this.props.profile && prevProps.profile) {\r\n    //         debugger\r\n    //         if (this.props.profile.photos.large !== prevProps.profile.photos.large) {\r\n    //             this.refreshProfile();\r\n    //         }\r\n    //     }\r\n    //     // }\r\n    // }\r\n\r\n        return (\r\n\r\n            <Profile {...props}/>\r\n\r\n        )\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.Profile.posts,\r\n        profile: state.Profile.profile,\r\n        status: state.Profile.status,\r\n        isFetching: state.Profile.isFetching,\r\n        myId: state.auth.data.id\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {addPost, getProfile, updateUserStatus, updateUserAvatar}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n// let authRedirectContainer = withAuthRedirect(ProfileContainer);\r\n//\r\n// let WithURLDataContainerComponent = withRouter(authRedirectContainer);\r\n//\r\n//\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(WithURLDataContainerComponent);","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW_USER = 'FOLLOW-USER';\r\nconst UNFOLLOW_USER = 'UNFOLLOW-USER';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_PAGE = 'SET-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst SET_SHORT_PAGES = 'SET-SHORT-PAGES';\r\nconst SWITCH_LEFT_PAGE = 'SWITCH-LEFT-PAGE';\r\nconst SWITCH_RIGHT_PAGE = 'SWITCH-RIGHT-PAGE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_FOLLOWING_PROCESS = 'TOGGLE-FOLLOWING-PROCESS';\r\n// const ADD_FRIEND = 'ADD-FRIEND';\r\n// const REMOVE_FRIEND = 'REMOVE-FRIEND';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    friends: [],\r\n    count: 10,\r\n    totalCount: 1,\r\n    page: 1,\r\n    shortPages: [1, 2, 3, 4, 5, '...'],\r\n    toLeftPage: false,\r\n    toRightPage: true,\r\n    isFetching: false,\r\n    followingInProcess: []\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                friends: [...state.friends, action.id],\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                friends: state.friends.filter(id => id !== action.id),\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            };\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            };\r\n\r\n        case SET_SHORT_PAGES:\r\n            return {\r\n                ...state,\r\n                shortPages: action.shortPages,\r\n            }\r\n\r\n        case SWITCH_LEFT_PAGE:\r\n            return {\r\n                ...state,\r\n                toLeftPage: action.switchLeftPage\r\n            }\r\n\r\n        case SWITCH_RIGHT_PAGE:\r\n            return {\r\n                ...state,\r\n                toRightPage: action.switchRightPage\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_FOLLOWING_PROCESS:\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.isFetching\r\n                    ? [...state.followingInProcess, action.id]\r\n                    : state.followingInProcess.filter(id => id !== action.id)\r\n            }\r\n\r\n        // case ADD_FRIEND:\r\n        //     return {\r\n        //         ...state,\r\n        //         friends: [...state.friends, action.id]\r\n        //     }\r\n        //\r\n        // case REMOVE_FRIEND:\r\n        //     return {\r\n        //         ...state,\r\n        //         friends: state.friends.filter(id => id !== action.id)\r\n        //     }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const followUser = (id) => ({\r\n    type: FOLLOW_USER,\r\n    id\r\n})\r\n\r\nexport const unfollowUser = (id) => ({\r\n    type: UNFOLLOW_USER,\r\n    id\r\n})\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\n\r\nexport const setPage = (page) => ({\r\n    type: SET_PAGE,\r\n    page\r\n})\r\nexport const setTotalCount = (totalCount) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    totalCount\r\n})\r\n\r\nexport const setShortPages = (shortPages) => ({\r\n    type: SET_SHORT_PAGES,\r\n    shortPages,\r\n})\r\n\r\nexport const switchLeftPage = (switchLeftPage) => ({\r\n    type: SWITCH_LEFT_PAGE,\r\n    switchLeftPage\r\n})\r\n\r\nexport const switchRightPage = (switchRightPage) => ({\r\n    type: SWITCH_RIGHT_PAGE,\r\n    switchRightPage\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const toggleFollowingProcess = (isFetching, id) => ({\r\n    type: TOGGLE_FOLLOWING_PROCESS,\r\n    isFetching,\r\n    id\r\n})\r\n\r\n// export const addFriend = (id) => ({\r\n//     type: ADD_FRIEND,\r\n//     id\r\n// })\r\n//\r\n// export const removeFriend = (id) => ({\r\n//     type: REMOVE_FRIEND,\r\n//     id\r\n// })\r\n\r\nexport const requestUsers = (page, count) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(page, count)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalCount(data.totalCount));\r\n                dispatch(toggleIsFetching(false));\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProcess(true, id))\r\n        usersAPI.followUser(id)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followUser(id));\r\n                }\r\n                dispatch(toggleFollowingProcess(false, id))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProcess(true, id))\r\n        usersAPI.unFollowUser(id)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollowUser(id));\r\n                }\r\n                dispatch(toggleFollowingProcess(false, id))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","import React from 'react';\r\nimport style from './Users.module.css';\r\n// import User from \"./User/User\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {requestUsers} from \"../../Redux/users-reducer\";\r\n\r\nclass Users extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.requestUsers(this.props.page, this.props.count);\r\n\r\n    };\r\n\r\n\r\n    // userItem = this.props.users.map(user =>\r\n    //\r\n    //     <div className={style.User}>\r\n    //         <div className={style.userAvatar}>\r\n    //             <img src={user.photos.small} alt=\"user-avatar\" className={style.userAvatarImg}/>\r\n    //         </div>\r\n    //         <div className={style.userData}>\r\n    //             <div>\r\n    //                 <div className={style.userName}><h2>{user.name}</h2></div>\r\n    //                 <div className={style.userDescription}>{user.status}</div>\r\n    //             </div>\r\n    //             <div className={style.isFollowedButton}>\r\n    //                 {\r\n    //                     user.followed\r\n    //                         ? <button onClick={\r\n    //                             () => {\r\n    //                                 this.props.unfollowUser(user.id)\r\n    //                             }\r\n    //                         }>Unfollow</button>\r\n    //\r\n    //                         : <button onClick={\r\n    //                             () => {\r\n    //                                 this.props.followUser(user.id)\r\n    //                             }\r\n    //                         }>Follow</button>\r\n    //                 }\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    // )\r\n\r\n\r\n    onPageChanged = (page, pagesCount, shortPages) => {\r\n        this.props.setPage(page);\r\n        if (page === 1) {\r\n            this.props.switchLeftPage(false)\r\n        } else {\r\n            this.props.switchLeftPage(true)\r\n        }\r\n        if (page === pagesCount) {\r\n            this.props.switchRightPage(false)\r\n        } else {\r\n            this.props.switchRightPage(true)\r\n        }\r\n\r\n        this.props.requestUsers(page, this.props.count);\r\n        // this.props.toggleIsFetching(true)\r\n        // usersAPI.requestUsers(page, this.props.count)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.toggleIsFetching(false)\r\n        //     })\r\n\r\n        // let pages = [pagesCount-4, pagesCount-3, pagesCount-2, pagesCount-1, pagesCount]\r\n        // console.log(pages)\r\n        // if (pages.includes(page)) {\r\n        //     shortPages = [1, '...'];\r\n        //     for (let i = 2; i > 6; i++) {\r\n        //         shortPages[i] = pages[i-2];\r\n        //     }\r\n        //     console.log(shortPages)\r\n        //     this.props.setShortPages(shortPages);\r\n        // }\r\n    }\r\n\r\n    changePage = (shortPages, num, pagesCount) => {\r\n        let page = this.props.page;\r\n        page = page + num;\r\n        this.props.setPage(page);\r\n\r\n        page === 1\r\n            ? this.props.switchLeftPage(false)\r\n            : this.props.switchLeftPage(true)\r\n\r\n        page === pagesCount\r\n            ? this.props.switchRightPage(false)\r\n            : this.props.switchRightPage(true)\r\n\r\n        this.props.requestUsers(page, this.props.count)\r\n        // this.props.toggleIsFetching(true)\r\n        // usersAPI.requestUsers(page, this.props.count)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.toggleIsFetching(false)\r\n        //     })\r\n\r\n        if (!shortPages.includes(page)) {\r\n            this.props.toggleIsFetching(true)\r\n            for (let i = 0; i < 5; i++) {\r\n                shortPages[i] = shortPages[i] + num;\r\n            }\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setShortPages(shortPages);\r\n        }\r\n\r\n        // if (page === pagesCount-4) {\r\n        //     shortPages = [1, '...']\r\n        //     for (let i = 2; i < 7; i--) {\r\n        //         shortPages[i] = pagesCount-4 - (i-1);\r\n        //     }\r\n        //     this.props.setShortPages(shortPages);\r\n        // }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.count);\r\n\r\n        let pages = [];\r\n\r\n        let shortPages = this.props.shortPages;\r\n\r\n        if (pagesCount !== 1) {\r\n\r\n            for (let i = 1; i <= pagesCount; i++) {\r\n                pages.push(i);\r\n                if (i === pagesCount) {\r\n                    shortPages.push(pages.length);\r\n                    shortPages.splice(7, 1);\r\n\r\n                }\r\n\r\n            }\r\n            // shortPages.push(pages.length);\r\n\r\n\r\n        }\r\n\r\n\r\n        // let Page = (page) => {\r\n        //     return (\r\n        //         <span className={`\r\n        //         ${this.props.page === page && style.currentPage}\r\n        //         ${style.page}`}\r\n        //               onClick={\r\n        //                   (e) => {\r\n        //                       this.onPageChanged(page)\r\n        //                   }\r\n        //\r\n        //               }>{page}</span>\r\n        //     )\r\n        //\r\n        //\r\n        // }\r\n\r\n        let Page = (props) => {\r\n\r\n            if (props.page === '...') {\r\n                return <span key={props.page}\r\n                             style={{cursor: 'pointer', margin: 5 + 'px', fontSize: 25 + 'px'}}>{props.page}</span>\r\n            } else {\r\n                return (\r\n                    <span key={props.page} className={`\r\n                                ${this.props.page === props.page && style.currentPage}\r\n                                ${style.page}`}\r\n                          onClick={\r\n                              (e) => {\r\n                                  this.onPageChanged(props.page, pagesCount, shortPages)\r\n                              }\r\n\r\n                          }>{props.page}</span>\r\n                )\r\n            }\r\n\r\n        }\r\n\r\n        let num;\r\n\r\n\r\n        return (\r\n            <div className={style.Users}>\r\n                <div className={style.usersArea}>\r\n\r\n                    {this.props.isFetching ? <Preloader/> :\r\n                        <div className={style.pages}>\r\n                            {\r\n                                pages.length > 10\r\n                                    ?\r\n                                    <span>\r\n\r\n                                    {\r\n                                        this.props.toLeftPage\r\n                                            ? <span>\r\n                                                <span className={style.navs} onClick={() => {\r\n                                                    num = -10;\r\n                                                    this.changePage(shortPages, num, pagesCount)\r\n                                                }}>⫷</span>\r\n                                                <span className={style.navs} onClick={() => {\r\n                                                    num = -1;\r\n                                                    this.changePage(shortPages, num, pagesCount)\r\n                                                }}>◄</span>\r\n                                            </span>\r\n                                            : null\r\n                                    }\r\n                                        <span>\r\n                                        {this.props.shortPages.map(page => <Page page={page} key={page}/>)}\r\n                                    </span>\r\n                                        {\r\n                                            this.props.toRightPage\r\n                                                ? <span>\r\n                                                <span className={style.navs} onClick={() => {\r\n                                                    num = 1;\r\n                                                    this.changePage(shortPages, num, pagesCount)\r\n                                                }}>►</span>\r\n                                                <span className={style.navs} onClick={() => {\r\n                                                    num = 10;\r\n                                                    this.changePage(shortPages, num, pagesCount)\r\n                                                }}>⫸</span>\r\n                                            </span>\r\n                                                : null\r\n                                        }\r\n\r\n                                </span>\r\n\r\n                                    : pages.map(page => <Page page={page}/>)\r\n\r\n                            }\r\n\r\n                            {/*{*/}\r\n                            {/*    pages.map(page => <Page page={page} /> )*/}\r\n                            {/*}*/}\r\n\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        this.props.users.map(user =>\r\n\r\n                            <div className={style.User} key={user.id}>\r\n                                <div className={style.userAvatar}>\r\n\r\n                                    <NavLink to={`/profile/${user.id}`}>\r\n                                        {\r\n                                            user.photos.small === null\r\n                                                ? <img\r\n                                                    src=\"http://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png\"\r\n                                                    alt=\"user-avatar\"\r\n                                                    className={style.userAvatarImg}/>\r\n                                                : <img src={user.photos.small} alt=\"user-avatar\"\r\n                                                       className={style.userAvatarImg} style={{borderRadius: `100%`}}/>\r\n                                        }\r\n                                    </NavLink>\r\n\r\n                                    {/*<img src={user.photos.small} alt=\"user-avatar\" className={style.userAvatarImg}/>*/}\r\n                                </div>\r\n                                <div className={style.userData}>\r\n                                    <div>\r\n                                        <NavLink to={`/profile/${user.id}`} className={style.userName}>\r\n                                            <h2>{user.name}</h2>\r\n                                        </NavLink>\r\n                                        <div className={style.userDescription}>{user.status}</div>\r\n                                    </div>\r\n                                    <div className={style.followingButton}>\r\n                                        {\r\n                                            user.followed\r\n                                                ?\r\n                                                this.props.followingInProcess.some(id => id === user.id)\r\n                                                    ? <div className={style.preloader}><Preloader/></div>\r\n                                                    :\r\n                                                    <button\r\n                                                        disabled={this.props.followingInProcess.some(id => id === user.id)}\r\n                                                        onClick={\r\n                                                            () => {\r\n                                                                this.props.unfollow(user.id)\r\n                                                            }\r\n                                                        }>Unfollow</button>\r\n\r\n\r\n                                                :\r\n                                                this.props.followingInProcess.some(id => id === user.id)\r\n                                                    ? <div className={style.preloader}><Preloader/></div>\r\n                                                    :\r\n                                                    <button\r\n                                                        disabled={this.props.followingInProcess.some(id => id === user.id)}\r\n                                                        onClick={\r\n                                                            () => {\r\n                                                                this.props.follow(user.id);\r\n                                                            }\r\n                                                        }>Follow</button>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Users;\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.Users.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users;\r\n})\r\n\r\nexport const getCount = (state) => {\r\n    return state.Users.count;\r\n}\r\n\r\nexport const getTotalCount = (state) => {\r\n    return state.Users.totalCount;\r\n}\r\n\r\nexport const getPage = (state) => {\r\n    return state.Users.page;\r\n}\r\n\r\nexport const getShortPages = (state) => {\r\n    return state.Users.shortPages;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.Users.isFetching;\r\n}\r\n\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.Users.followingInProcess;\r\n}","import Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setPage,\r\n    setShortPages,\r\n    switchLeftPage,\r\n    switchRightPage, requestUsers, follow, unfollow\r\n} from \"../../Redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCount,\r\n    getFollowingInProcess,\r\n    getIsFetching,\r\n    getPage,\r\n    getShortPages,\r\n    getTotalCount,\r\n    getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.Users.users,\r\n//         count: state.Users.count,\r\n//         totalCount: state.Users.totalCount,\r\n//         page: state.Users.page,\r\n//         shortPages: state.Users.shortPages,\r\n//         toLeftPage: state.Users.toLeftPage,\r\n//         toRightPage: state.Users.toRightPage,\r\n//         isFetching: state.Users.isFetching,\r\n//         followingInProcess: state.Users.followingInProcess,\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        count: getCount(state),\r\n        totalCount: getTotalCount(state),\r\n        page: getPage(state),\r\n        shortPages: getShortPages(state),\r\n        toLeftPage: state.Users.toLeftPage,\r\n        toRightPage: state.Users.toRightPage,\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state),\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    setPage,\r\n    setShortPages,\r\n    switchLeftPage,\r\n    switchRightPage,\r\n    requestUsers,\r\n    follow,\r\n    unfollow\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Users)\r\n\r\n// let authRedirectComponent = withAuthRedirect(Users);\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(authRedirectComponent);","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// import BurgerMenu from \"../Common/BurgerMenu\";\r\n\r\nfunction NavBar(props) {\r\n    return (\r\n        <div className={style.NavBar}>\r\n            {/*<BurgerMenu/>*/}\r\n            <NavLink to='/' className={style.Logo}>Social Web</NavLink>\r\n            {\r\n                props.isAuth\r\n                    ?\r\n                    <div className={style.navs} style={{gridTemplateColumns: `repeat(4, 1fr)`}}>\r\n                        <NavLink to=\"/profile\" className={style.navItem}>Profile</NavLink>\r\n                        {/*<NavLink to=\"/messages\" className={style.navItem}>Messages</NavLink>*/}\r\n                        <NavLink to=\"/friends\" className={style.navItem}>Friends</NavLink>\r\n                        <NavLink to=\"/users\" className={style.navItem}>Users</NavLink>\r\n                        <div className={style.navItem}>\r\n                            <div className={`${style.userStateWrapper} ${style.logout}`}>\r\n                                <div className={style.userState} onClick={props.logout}>\r\n                                    <div>Logout</div>\r\n                                    <div className={style.userDataImage}>\r\n                                        <img src=\"http://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png\"\r\n                                             alt=\"profile-image\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <></>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className={style.navs} style={{gridTemplateColumns: `3fr 1fr`}}>\r\n                        <div className={style.navItem}></div>\r\n                        <div className={style.navItem}>\r\n                            <div className={`${style.userStateWrapper} ${style.login}`}>\r\n                                <div className={style.userState}>\r\n                                    <NavLink to='/login'>\r\n                                        <div>Login</div>\r\n                                    </NavLink>\r\n                                    <div className={style.userDataImage}>\r\n                                        <img src=\"http://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png\"\r\n                                             alt=\"profile-image\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <></>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            {/*<div className={style.pushLogin}>Welcome, {props.login}!</div>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\nlet initialState = {\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null\r\n    },\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setUserData = (data, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {data, isAuth},\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const authMe = () => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        return authAPI.authMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    // let {id, login, email} = data.data;\r\n                    dispatch(setUserData(data.data, true));\r\n                }\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (formData) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        authAPI.login(formData)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authMe());\r\n                } else if (data.resultCode === 1) {\r\n                    let errorMessage = data.messages.length > 0 ? data.messages[0] : \"Some error.\"\r\n                    let action = stopSubmit('login', {_error: errorMessage});\r\n                    dispatch(action)\r\n                }\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        authAPI.logout()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setUserData(null, false));\r\n                }\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport NavBar from \"./NavBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\nclass NavBarContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <NavBar {...this.props} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isFetching: state.auth.isFetching,\r\n    login: state.auth.login\r\n});\r\n\r\nlet mapDispatchToProps = ({\r\n    logout\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBarContainer);\r\n","import React from 'react';\r\nimport {userProfileAPI} from \"../../api/api\";\r\nimport * as axios from \"axios\";\r\n\r\nclass Friends extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let name = [];\r\n\r\n        this.props.friends.map(friend => {\r\n\r\n            axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${friend}`)\r\n                .then(res => {\r\n                    name.push(res.data.fullName)\r\n                })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.name)\r\n        debugger\r\n        return (\r\n            <div>{this.name}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friends;","const UNFOLLOW_FRIEND = 'UNFOLLOW-FRIEND';\r\nconst SET_FRIENDS = 'SET-FRIENDS';\r\nconst SET_PAGE = 'SET-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\nlet initialState = {\r\n    friends: [],\r\n    count: 100,\r\n    totalCount: 1,\r\n    page: 1,\r\n    isFetching: false\r\n};\r\n\r\nlet friendsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case UNFOLLOW_FRIEND:\r\n            return {\r\n                ...state,\r\n                users: state.friends.map(friend => {\r\n                    if (friend.id === action.id) {\r\n                        return {...friend, followed: false}\r\n                    }\r\n                    return friend;\r\n                })\r\n            };\r\n\r\n        case SET_FRIENDS:\r\n            return {\r\n                ...state,\r\n                friends: action.friends\r\n            };\r\n\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            };\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return  {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const unfollowFriend = (id) => ({\r\n    type: UNFOLLOW_FRIEND,\r\n    id\r\n})\r\n\r\nexport const setFriends = (friends) => ({\r\n    type: SET_FRIENDS,\r\n    friends\r\n})\r\n\r\nexport const setPage = (page) => ({\r\n    type: SET_PAGE,\r\n    page\r\n})\r\nexport const setTotalCount = (totalCount) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    totalCount\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport default friendsReducer;\r\n","import React from 'react';\r\nimport Friends from \"./Friends\";\r\nimport {connect} from \"react-redux\";\r\nimport {setFriends, setPage, setTotalCount, toggleIsFetching, unfollowFriend} from \"../../Redux/friends-reducer\";\r\n\r\nclass FriendsContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Friends {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    friends: state.Users.friends,\r\n    count: state.Friends.count,\r\n    totalCount: state.Friends.totalCount,\r\n    page: state.Friends.page,\r\n    isFetching: state.Users.isFetching\r\n})\r\n\r\nlet mapDispatchToProps = ({\r\n    unfollowFriend,\r\n    setFriends,\r\n    setPage,\r\n    setTotalCount,\r\n    toggleIsFetching\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsContainer);\r\n\r\n","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport errorStyle from '../Common/FormsFields/FormsFields.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsFields/FormsFields\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst minLength8 = minLengthCreator(8);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.Form}>\r\n            <div>\r\n                <Field\r\n                    className={style.Field}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name={\"email\"}\r\n                    component={Input}\r\n                    validate={[required, maxLength30]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    className={style.Field}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name={\"password\"}\r\n                    component={Input}\r\n                    validate={[required, minLength8]}\r\n                />\r\n            </div>\r\n            {\r\n                props.error &&\r\n                <div className={errorStyle.commonError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div className={style.controls}>\r\n                <div style={{color: `#0e1d27`, fontWeigh: `bolder`, fontSize: `1em`}}>\r\n                    <Field className={style.rememberMe}\r\n                           type=\"checkbox\"\r\n                           name={\"rememberMe\"}\r\n                           component={\"input\"}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n                <button className={style.btn}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData);\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n    return (\r\n        <div className={style.Login}>\r\n            <div className={style.loginArea}>\r\n                <h1>LOGIN</h1>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authMe} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nlet appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMe());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport './Moose.css';\r\n\r\nexport const Moose = (props) => {\r\n    return (\r\n        <div>\r\n            <div id=\"bg\"></div>\r\n\r\n\r\n            <div id=\"world\">\r\n\r\n\r\n                <div id=\"mooseRotator\">\r\n\r\n                    <div id=\"mooseTranslator\">\r\n\r\n                        <div id=\"mooseShadow\"></div>\r\n\r\n                        <div id=\"moose\">\r\n\r\n                            <div id=\"mooseBody\">\r\n\r\n                                <div id=\"mooseFront\">\r\n                                    <div id=\"mooseFront_a\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_b\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_c\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_d\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_e\" className=\"mooseFrontItem\"></div>\r\n                                    <div id=\"mooseFront_f\" className=\"mooseFrontItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseBack\">\r\n                                    <div id=\"mooseBack_a\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_b\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_c\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_d\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_e\" className=\"mooseBackItem\"></div>\r\n                                    <div id=\"mooseBack_f\" className=\"mooseBackItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseLeft\">\r\n                                    <div id=\"mooseLeft_a\" className=\"mooseLeftItem\"></div>\r\n                                    <div id=\"mooseLeft_b\" className=\"mooseLeftItem\"></div>\r\n                                    <div id=\"mooseLeft_c\" className=\"mooseLeftItem\"></div>\r\n                                    <div id=\"mooseLeft_d\" className=\"mooseLeftItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseRight\">\r\n                                    <div id=\"mooseRight_a\" className=\"mooseRightItem\"></div>\r\n                                    <div id=\"mooseRight_b\" className=\"mooseRightItem\"></div>\r\n                                    <div id=\"mooseRight_c\" className=\"mooseRightItem\"></div>\r\n                                    <div id=\"mooseRight_d\" className=\"mooseRightItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseTop\">\r\n                                    <div id=\"mooseTop_a\" className=\"mooseTopItem\"></div>\r\n                                    <div id=\"mooseTop_b\" className=\"mooseTopItem\"></div>\r\n                                    <div id=\"mooseTop_c\" className=\"mooseTopItem\"></div>\r\n                                    <div id=\"mooseTop_d\" className=\"mooseTopItem\"></div>\r\n                                </div>\r\n\r\n                                <div id=\"mooseBottom\">\r\n                                    <div id=\"mooseBottom_a\" className=\"mooseBottomItem\"></div>\r\n                                    <div id=\"mooseBottom_b\" className=\"mooseBottomItem\"></div>\r\n                                    <div id=\"mooseBottom_c\" className=\"mooseBottomItem\"></div>\r\n                                    <div id=\"mooseBottom_d\" className=\"mooseBottomItem\"></div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div id=\"mooseLegLeft\">\r\n\r\n                                <div id=\"mooseLegLeft_a\" className=\"mooseLegLeftItem mooseBottomItem\"></div>\r\n                                <div id=\"mooseLegLeft_b\" className=\"mooseLegLeftItem mooseLeftItem\"></div>\r\n                                <div id=\"mooseLegLeft_c\" className=\"mooseLegLeftItem mooseRightItem\"></div>\r\n                                <div id=\"mooseLegLeft_d\" className=\"mooseLegLeftItem mooseFrontItem\"></div>\r\n                                <div id=\"mooseLegLeft_e\" className=\"mooseLegLeftItem mooseBackItem\"></div>\r\n                                <div id=\"mooseLegLeft_f\" className=\"mooseLegLeftItem mooseTopItem\"></div>\r\n                            </div>\r\n\r\n                            <div id=\"mooseLegRight\">\r\n                                <div id=\"mooseLegRight_a\" className=\"mooseLegRightItem mooseBottomItem\"></div>\r\n                                <div id=\"mooseLegRight_b\" className=\"mooseLegRightItem mooseLeftItem\"></div>\r\n                                <div id=\"mooseLegRight_c\" className=\"mooseLegRightItem mooseRightItem\"></div>\r\n                                <div id=\"mooseLegRight_d\" className=\"mooseLegRightItem mooseFrontItem\"></div>\r\n                                <div id=\"mooseLegRight_e\" className=\"mooseLegRightItem mooseBackItem\"></div>\r\n                                <div id=\"mooseLegRight_f\" className=\"mooseLegRightItem mooseTopItem\"></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Switch, Route, withRouter} from \"react-router-dom\";\r\nimport Messages from \"./Components/Messages/Messages\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport NavBarContainer from \"./Components/NavBar/NavBarContainer\";\r\nimport FriendsContainer from \"./Components/Friends/FriendsContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./Components/Common/Preloader\";\r\nimport {Moose} from \"./Components/Common/Moose\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) return <Moose/>\r\n        // if (!this.props.initialized) return <Preloader/>\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <NavBarContainer/>\r\n                <Switch>\r\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                    {/*<Route path='/messages' render={() => <Messages/>}/>*/}\r\n                    <Route path='/friends' render={() => <FriendsContainer/>}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/login' render={() => <Login/>}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.App.initialized\r\n})\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    Profile: profileReducer,\r\n    Users: usersReducer,\r\n    auth: authReducer,\r\n    Friends: friendsReducer,\r\n    form: formReducer,\r\n    App: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__31unx\",\"profileArea\":\"Profile_profileArea__1TzQu\",\"avatar\":\"Profile_avatar__3mjQw\",\"ava\":\"Profile_ava__2sW2w\",\"posts\":\"Profile_posts__KKBI1\",\"description\":\"Profile_description__1gsND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formField\":\"FormsFields_formField__1ioKc\",\"error\":\"FormsFields_error__ywANb\",\"commonError\":\"FormsFields_commonError__34Xk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__fNY0P\",\"messagesArea\":\"Messages_messagesArea__ugZXV\",\"Users\":\"Messages_Users__11ljE\",\"userName\":\"Messages_userName__dgv7v\",\"userMessages\":\"Messages_userMessages__1_5e2\",\"Message\":\"Messages_Message__2_UUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__1FENy\",\"popupBody\":\"Popup_popupBody__1TKoh\",\"popupInner\":\"Popup_popupInner__2Jb_P\",\"close\":\"Popup_close__7D4_f\",\"open\":\"Popup_open__1zFTy\"};"],"sourceRoot":""}